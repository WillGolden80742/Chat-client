package View;

import ConnectionFactory.Server;
import LookAndFeel.LAF;
import Model.bean.Authenticated;
import Model.bean.Encrypt;
import java.awt.Color;
import java.awt.Toolkit;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import util.Communication;

/**
 *
 * @author William
 */
public class Login extends javax.swing.JFrame {

    private String theme;
    private LAF laf;

    public Login() throws IOException, ClassNotFoundException {
        initComponents();
        setIconTop();
        setLocation(500, 250);
        setLaf();
    }

    private void setLaf(String theme) {
        if (theme.equals("")) {
            laf = new LAF();
        } else {
            laf = new LAF(theme);
        }
        laf.setLAF(this);
        if (laf.getTheme().equals("dark")) {
            passIcon.setIcon(new ImageIcon(getClass().getResource("/Images/passwordIcon.png")));
            themeLabel.setIcon(new ImageIcon(getClass().getResource("/Images/dark.png")));
            this.theme = "dark";
            themeLabel.setToolTipText("Mudar para tema claro");
        } else {
            passIcon.setIcon(new ImageIcon(getClass().getResource("/Images/passwordIcon-dark.png")));
            themeLabel.setIcon(new ImageIcon(getClass().getResource("/Images/light.png")));
            this.theme = "light";
            themeLabel.setToolTipText("Mudar para tema escuro");
        }
    }

    private void setLaf() {
        setLaf("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        logar = new javax.swing.JButton();
        password = new javax.swing.JPasswordField();
        nickName = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        messageLogin = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        singUp = new javax.swing.JButton();
        passIcon = new javax.swing.JLabel();
        themeLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        logar.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        logar.setText("LOGAR");
        logar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logarActionPerformed(evt);
            }
        });

        password.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        password.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                passwordKeyReleased(evt);
            }
        });

        nickName.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        nickName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nickNameKeyReleased(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("@");
        jLabel1.setToolTipText("nickname");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/chat.png"))); // NOI18N

        messageLogin.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        messageLogin.setForeground(new java.awt.Color(255, 51, 0));
        messageLogin.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jLabel4.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("LOGIN");

        singUp.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        singUp.setText("CADASTRAR");
        singUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                singUpActionPerformed(evt);
            }
        });

        passIcon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        passIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/passwordIcon.png"))); // NOI18N
        passIcon.setToolTipText("senha");

        themeLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/dark.png"))); // NOI18N
        themeLabel.setToolTipText("mudar tema");
        themeLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                themeLabelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(messageLogin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(70, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                            .addComponent(passIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(themeLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nickName)
                    .addComponent(logar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(password)
                    .addComponent(singUp, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE))
                .addGap(99, 99, 99))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(themeLabel)))
                .addGap(5, 5, 5)
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nickName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addComponent(logar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(singUp)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(messageLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void passwordKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordKeyReleased
        if (evt.getKeyCode() == 10) {
            login();
        }
        messageLogin.setText("");
    }//GEN-LAST:event_passwordKeyReleased

    private void nickNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nickNameKeyReleased
        messageLogin.setText("");
        nickName.setText(nickName.getText().replaceAll("[^A-Za-z0-9_]", ""));
    }//GEN-LAST:event_nickNameKeyReleased

    private void singUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_singUpActionPerformed
        SingUP sUP = new SingUP();
        sUP.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_singUpActionPerformed

    private void logarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logarActionPerformed
        login();
        setMessageLoginColor(new Color(255, 51, 0));
    }//GEN-LAST:event_logarActionPerformed

    private void themeLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_themeLabelMouseClicked
        if (theme.equals("dark")) {
            setLaf("light");
            laf.setLAF(this);
        } else {
            setLaf("dark");
            laf.setLAF(this);
        }
    }//GEN-LAST:event_themeLabelMouseClicked

    public void setMessageLogin(String value) {
        messageLogin.setText(value);
    }

    public void setMessageLoginColor(Color value) {
        messageLogin.setForeground(value);
    }

    private void login() {
        Server server;
        String replyLogin;
        String hashPassword;

        File myObj = new File("server.ini");
        Scanner myReader;
        String host = "";
        int port = 0;
        try {
            myReader = new Scanner(myObj);
            int cont = 0;
            while (myReader.hasNextLine()) {

                String data = myReader.nextLine();
                if (cont == 0) {
                    data = data.replaceAll(" ", "").split(":")[1];
                    host = data;
                } else if (cont == 1) {
                    data = data.replaceAll(" ", "").split(":")[1];
                    port = Integer.parseInt(data);
                }
                cont++;
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }

        server = new Server(host, port);
        Communication message = new Communication("LOGIN");
        hashPassword = new Encrypt(nickName.getText() + password.getText()).getHashMd5();
        message.setParam("nickName", nickName.getText());
        message.setParam("password", hashPassword);
        replyLogin = (String) server.outPut_inPut(message).getParam("LOGINREPLY");
        if (replyLogin.equals("OK")) {
            Authenticated auth = new Authenticated();
            auth.setLogin(nickName.getText());
            new Chat().setVisible(true);
            setVisible(false);
        } else {
            messageLogin.setText(replyLogin);
        }
    }

    private void setIconTop() {
        this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/Images/chat.png")));
    }

    public static void main(String args[]) {

        java.awt.EventQueue.invokeLater(() -> {
            try {
                new Login().setVisible(true);
            } catch (IOException | ClassNotFoundException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JButton logar;
    private javax.swing.JLabel messageLogin;
    private javax.swing.JTextField nickName;
    private javax.swing.JLabel passIcon;
    private javax.swing.JPasswordField password;
    private javax.swing.JButton singUp;
    private javax.swing.JLabel themeLabel;
    // End of variables declaration//GEN-END:variables
}
